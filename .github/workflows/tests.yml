name: Linting and Unit Tests

# This makes sure only one action triggers the job
on:
  pull_request:
    branches:
      - "*"
  push:
    branches:
      - main

jobs:
  lint:
    strategy:
      fail-fast: false
      matrix:
        go:
          - 18
          - 19
          - 20
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v4
        with:
          go-version: 1.${{matrix.go}}.x
      - name: Install golint
        run: GO111MODULE=off go get golang.org/x/lint/golint
      - name: Install golangci-lint
        run: curl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | sh -s -- -b $(go env GOPATH)/bin v1.51.2
      - name: Run lint checks on the source with go 1.${{matrix.go}}.x
        run: make check

  unit-tests:
    strategy:
      fail-fast: false
      matrix:
        go:
          - 18
          - 19
          - 20
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 2
      - uses: actions/setup-go@v4
        with:
          go-version: 1.${{matrix.go}}.x
      - name: Run unit tests on go 1.${{matrix.go}}.x
        run: make test

      - name: Send coverage to codecov.io for go v1.18.x
        if: matrix.go == 18
        run: bash <(curl -s https://codecov.io/bash)

  govulncheck:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v4
        with:
          go-version: 1.18.x
      - name: Install govulncheck
        run: go install golang.org/x/vuln/cmd/govulncheck@latest
      - name: Run govulncheck
        run: govulncheck ./...

  build-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Run build test
        run: make build-in-podman
